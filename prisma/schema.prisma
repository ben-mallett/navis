// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
    binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x", "linux-musl-openssl-3.0.x", "rhel-openssl-1.0.x"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now()) @db.Timestamptz(6)
  email     String    @unique
  password  String  
  name      String 
  balenaApiKey String? 
  role      Role
  devices   Device[]
}

enum Role {
  USER
  ADMIN
}

model Device {
  id              Int       @id @default(autoincrement())
  createdAt       DateTime  @default(now()) @db.Timestamptz(6)
  name            String
  balenaId        String
  ipAddress       String
  userId          Int
  user            User      @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  sensorReadings  SensorReading[] 
}

model SensorReading {
  id        Int       @id @default(autoincrement())
  takenOn   DateTime  @default(now()) @db.Timestamptz(6)
  dataType  DataType
  value     Float
  deviceId  Int       
  device    Device    @relation(fields: [deviceId], references: [id], onUpdate: Cascade, onDelete: Cascade)
}

enum DataType {
  TEMPERATURE
  PH
  CONDUCTIVITY
  NITRITES
  NITRATES
  AMMONIA
  ALKALINITY
}
